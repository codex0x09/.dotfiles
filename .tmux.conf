# -------------------------------------------------------------------------------------------------
# download [[ asciiquarium, tmatrix, cmatrix ]] ( Anemate your termianl )
# See tmux-plugins/tmux-sensible (Repo) for its default config
# -------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------
# from nvim :checkhealth
# -ERROR `escape-time` (500) is higher than 300ms
# - ADVICE:
#  - set escape-time in ~/.tmux.conf:
#    set-option -sg escape-time 10
# Address vim mode swtching delay
set-option -sg escape-time 0
set-option -g focus-events on

# -------------------------------------------------------------------------------------------------
# REBIND TMUX PREFIX TO CTRL-BACKSLASH
unbind-key C-b
set-option -g prefix C-\\
bind-key C-\\ send-prefix

# RELOAD CONFIG FILE EASILY -> CTRL-\r
bind r source-file ~/.tmux.conf \; display-message "Reloaded!!"
# Increase tmux messages display duration from 750ms to 1s
set -g display-time 1000

# -------------------------------------------------------------------------------------------------
# SPLIT Panes with \ and -
# Notes: the "#{pane_current_path}" is to Open the new-pane in the same dir/path
bind-key \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

unbind '"'
unbind %
# -------------------------------------------------------------------------------------------------
# GENERAL BINDES
# -------------------------------------------------------------------------------------------------
#sending key to bash to clear the sceern
bind C-l send-keys 'C-l'


# -------------------------------------------------------------------------------------------------
# SESSIONS
# -------------------------------------------------------------------------------------------------
# Create new session
bind S new-session -c '#{pane_current_path}'

# Swtich sessions
bind \; switch-client -l

# default 'prefix + &' kill session with prompting
# kill current session and change to the next available session
 bind-key -n M-s if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                     "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                     "run-shell 'tmux kill-session -t \"#S\"'"

# -------------------------------------------------------------------------------------------------
# visual notification of activity in other windows
# -------------------------------------------------------------------------------------------------
##setw -g monitor-activity on
##set -g visual-activity on

#renam windows automaticly
setw automatic-rename

# Let Window/Panes Index Starts From 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# SET TMUX IN VI MODE
set-window-option -g mode-keys vi

# -------------------------------------------------------------------------------------------------
# PANES
# -------------------------------------------------------------------------------------------------
# Resize-Panes
bind -n M-Left resize-pane -L 1     #ind -n M-L resize-pane -L 1
bind -n M-Right resize-pane -R 1    #ind -n M-H resize-pane -R 1
bind -n M-Down resize-pane -D 1     #ind -n M-J resize-pane -D 1
bind -n M-Up resize-pane -U 1       #ind -n M-K resize-pane -U 1

# Break-Pane && Join-pane && Kill-Pane
#TODO: See "man tumx" and search for { /break-pane , /join-pane } for dicent info.

# {break and mark the new window and back to origin windo,
# while 'B' also mark the new but not back}
# "break-pane" by default takes you to new window
# the flag '-d' means: the new window doesn't become the current window
bind-key b  break-pane -dP \; next-window \; selectp -m \; previous-window
bind-key B  break-pane -P  \; selectp -m  #back with "prefix-p or -l"

bind-key j join-pane         # join the selected pane via 'prefix + m' and clear mark

bind-key C-p kill-pane 	     # kill/close-pane no prompt,while the default "prefix + x" it prompt you

# -------------------------------------------------------------------------------------------------
# MOVE WINDOWS ORDER
bind-key -n C-S-Left swap-window -t -1 \; previous-window
bind-key -n C-S-Right swap-window -t +1 \; next-window

# -------------------------------------------------------------------------------------------------
# KEYBINDINGS FOR CONTROLLING THE STATUS BAR
bind-key A {set-option status on }               # Showes the status bar
bind-key a {set-option status off }              # Hides the status bar
bind-key e {set-option status-position top }     # moves the status bar to top
bind-key E {set-option status-position bottom }  # moves the status bar to bottom

# -------------------------------------------------------------------------------------------------
# RESURRECT CONFIC    [*] Prefix + ctrl-s -> (to Save)  [*] Prefix + ctrl-r (to Restore) SESSIONS
# -------------------------------------------------------------------------------------------------
set -g @resurrect-capture-pane-contents 'on'
# saving vim session
set -g @resurrect-strategy-vim 'session'
# saving nvim session
set -g @resurrect-strategy-nvim 'session'

# -------------------------------------------------------------------------------------------------
# COLORING
# -------------------------------------------------------------------------------------------------
# Enabling terminal prompr color
set -g default-terminal "screen-256color"
# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# nice neon green on dark blue status bar [[ "#39FF00" "#000530" ]]
# CUSTOM STATUS BAR
# clear right status
set-option -g status-right ""

# colors #202020 #ee8800
#*#set -g status-style "bg=#101010 fg=#5f37dd"

# COLORING CURRENT WINDOW
#*#setw -g window-status-current-style "bg=#121212 fg=#ee8800 bold"

# coloring window detials #00ff00
# format "#[fg/bg]#I<ndex>#[f/b]:#[f/b]#W<indow>#[f/b]#F(the *)"
# I'll add spaces around#00fffa
#*#set -g window-status-current-format " #I#[fg=#5f37dd]:#[fg=magenta]#W#[fg=colour255]#F "

# COLORING INACTIVE WINDOWS
#*#setw -g window-status-style "fg=#5f73dd bg=#090909"
#*#setw -g window-status-format " #I#[fg=colour237]:#[fg=#509378]#W#[fg=colour248]#F "

# COLORING MESSAGE STATUS
#*#set -g message-style "fg=#5f73dd "bg=#202020" bold"

# PANES SEPARETORS
# for inactive panes
set -g pane-border-style "fg=#5f73dd"

# FOR ACTIVE PANES
#set-option [-aFgopqsuw] [-t-pane] option [green]
#set -g  pane active-border-style fg=green
set -g  pane-active-border-style "fg=Red"

# -------------------------------------------------------------------------------------------------
# COLORING THE CLOCK
# "prefex + t" to display time
# "prefex + q" to display panes numbers

set-option -g clock-mode-colour cyan

# -------------------------------------------------------------------------------------------------
# WINDOW AND PANE NAVIGATION
# -------------------------------------------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
		| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
		bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
		bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
		bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
		bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
		bind-key -T copy-mode-vi 'C-h' select-pane -L
		bind-key -T copy-mode-vi 'C-j' select-pane -D
		bind-key -T copy-mode-vi 'C-k' select-pane -U
		bind-key -T copy-mode-vi 'C-l' select-pane -R
		bind-key -T copy-mode-vi 'C-\' select-pane -l

# -------------------------------------------------------------------------------------------------
# LIST OF PLUGINS (TO INSTALL PLUGINS PREFEX+I)
# -------------------------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm' # Begining of plugins
# -------------------------------------------------------------------------------------------------

# LIST OF PLUGINS
#set -g @plugin 'tmux-plugins/tmux-sensible' # Essential/Useful Config ()
set -g @plugin 'tmux-plugins/tmux-resurrect' # Saving Tmux Sessions

# -------------------------------------------------------------------------------------------------
run '~/.tmux/plugins/tpm/tpm' # End of plugins
# -------------------------------------------------------------------------------------------------
